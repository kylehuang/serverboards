name: Auth test
description: >
  Simple auth plugin, that logins using a simple token.
author: David Moreno <dmoreno@serverboards.io>
id: serverboards.test.auth
version: 0.0.1
postinst: postinst.sh

components:
  - name: daemon
    type: cmd
    id: fake
    perms: plugin.data[serverboards.test.auth] event.emit service.get
    command: auth.py
    traits: auth

  - name: Token auth test
    id: auth
    type: auth
    command: serverboards.test.auth/fake
    login:
      call: auth_token
      params:
        - name: token
          label: Token
          type: text

  - name: Freepass
    id: freepass
    type: auth
    command: serverboards.test.auth/fake
    login:
      call: freepass
      params: []

  - name: New User
    id: new_user
    type: auth
    command: serverboards.test.auth/fake
    login:
      call: new_user
      params:
        - name: username
          type: text


  - name: generic component
    type: service
    traits: generic
    id: server
    fields:
      - name: url
        label: URL
        placeholder: https://example.com

  - name: email component
    type: service
    traits: email
    id: email
    fields:
      - name: email
        label: Email address
        placeholder: test@serverboards.io

  - name: Component config
    type: settings
    id: settings
    perms: settings
    fields:
      - name: base_url
        label: Serverboards Base URL
        type: url
        placeholder: https://test.serverboards.io
      - name: test_pw
        label: Test if passwords can be recovered
        type: password
        placeholder: "********"

  - name: Test action
    type: action
    id: action
    command: fake
    call:
      method: http_get
      params:
        - name: url
          label: Remote URL
          placeholder: eg. http://example.com, https://example.com/path
          type: text
        - name: sleep
          default: 0.1
      returns: text
    traits: test

  - name: Test action
    type: action
    id: action.full-command-path
    command: serverboards.test.auth/fake
    call:
      method: http_get
      params:
        - name: url
          label: Remote URL
          placeholder: eg. http://example.com, https://example.com/path
          type: text
      returns: text
    traits:

  - name: Bad action
    type: action
    id: action
    command: fake
    call:
      method: http_get-wrong
      params:
        - name: url
          label: Remote URL
          placeholder: eg. http://example.com, https://example.com/path
          type: text
      returns: text
    traits:
  - name: Abort
    type: action
    id: abort
    command: fake
    call:
      method: abort
      returns: text
  - name: Notifications email address
    id: channel.json.tmp.file
    type: notification
    fields:
      - label: Email address
        placeholder: Leave empty to use main email address
        name: email
        validation: email
    command: serverboards.test.auth/fake
    call: notification_json

  - name: Periodic timer
    type: trigger
    states: tick stop
    id: periodic.timer
    command: fake
    stop: periodic_timer_stop
    start:
      method: periodic_timer
      params:
        - name: period
          default: 0.1

  - name: Start timer
    type: trigger
    states: tick
    id: start.trigger
    command: fake_singleton
    stop: stop_trigger_at_start
    start:
      method: trigger_at_start
      params: []

  - name: Shallow Trigger
    type: trigger
    states: ok nok
    id: shallow.trigger
    command: fake_singleton

  - name: Touch a file
    type: action
    id: touchfile
    command: fake
    call:
      method: touchfile
      params:
        - name: filename
          label: File to create and set the date inside

  - name: Simple trigger no stop
    type: trigger
    id: simple.trigger
    command: nonstop.trigger.command
    states: tick
    start:
      method: simple_trigger

  - name: Abort trigger
    type: trigger
    id: abort.trigger
    command: fake
    start:
      method: abort

  - name: Except trigger
    type: trigger
    id: except.trigger
    command: fake
    start:
      method: exception

  - name: fake auth singleton
    type: cmd
    id: fake_singleton
    strategy: singleton
    timeout: 1s
    command: auth.py
  - name: fake auth one for one
    type: cmd
    id: fake_one_for_one
    strategy: one_for_one
    timeout: 1s
    command: auth.py
  - name: nonstop trigger one for one
    type: cmd
    id: nonstop.trigger.command
    strategy: one_for_one
    timeout: 1s
    command: nonstoptrigger.py

  - name: simple screen
    id: no.traits.screen
    type: screen

  - name: traits screen
    id: traits.screen
    type: screen
    traits: email

  - name: init command
    id: init.cmd2
    type: cmd
    command: init2.py
    strategy: singleton
    timeout: 1s

  - name: init command
    id: init.cmd
    type: cmd
    command: init.py
    strategy: singleton
    timeout: 1d

  - name: init init
    id: init.init
    type: init
    command: serverboards.test.auth/init.cmd
    call: init

  - name: init fail
    id: init.fail
    type: init
    command: serverboards.test.auth/init.cmd
    call: fail

  - id: rule.template
    type: rule template
    name: Rule template example
    fields:
      - name: period
        type: string
        label: Period for checks
      - name: randomp
        label: Random probability (0-1)
      - name: filename
        label: Which file to create/delete
      - name: service
        label: related service
        type: service
        traits: url
    rule:
      when:
        trigger: serverboards.test.auth/periodic.timer
        params:
          period: "{{period}}"
      actions:
        - id: A
          type: action
          action: serverboards.test.auth/random
          params: {}
        - type: condition
          condition: "A.result < {{randomp}}"
          then:
            - type: action
              action: serverboards.test.auth/writetofile
              params:
                filename: "{{filename}}"
                content: "{{A.result}} {{service.config.url}}"
          else:
            - type: action
              action: serverboards.test.auth/rmfile
              params:
                filename: "{{filename}}"
  - name: Webhook
    id: webhook
    type: trigger


  - name: custom.perm
    id: custom.perm
    type: cmd
    command: ./auth.py
    user_perms: auth_ping

  - name: custom.perm2
    id: custom.perm2
    type: cmd
    command: ./auth.py
    user_perms:
      - auth_ping
      - auth_pong
